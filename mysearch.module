<?php

/**
 * Implementation of hook_menu().
 */
function mysearch_menu()
{
  $items['mysearch/%'] = array(
    'title callback' => 'mysearch_searchtitle',
    'title arguments' => array(1),
    'page callback' => 'mysearch_searchpage',
    'page arguments' => array(1),
    'access arguments' => array('access mysearch'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}


/**
 * Implementation of hook_permission().
 */
function mysearch_permission()
{
  return array(
    'access mysearch' => array(
      'title' => 'Access My Search',
      'description' => 'Allows a user to access search results',
    )
  );
}

/**
 * Title callback for mysearch/% page.
 */
function mysearch_searchtitle($searchword)
{
  $title = t('Search results "@searchword"', array(
    '@searchword' => $searchword,
  ));
  return $title;
}

/**
 * Menu callback provides a simple list of nodes matching the
 * search term Example: hitting the URL:
 *   http://domain.com/mysearch/example
 * will return a list of links to nodes which have the word
 * example in them.
 */
function mysearch_searchpage($searchword)
{
  if ($cache = cache_get("mysearch:{$searchword}")) {
    $data = $cache->data;
  }
  else {
    $query = db_select('node', 'n');
    $query->join('field_data_body', 'b', 'n.nid = b.entity_id');
    $query->condition('b.entity_type', 'node');
    $query->condition('n.status', 1);
    $query->condition('b.body_value', '%' . db_like($searchword) . '%', 'LIKE');
    $query->fields('n', array('nid', 'title'));
    $data = $query->execute()->fetchAllKeyed();
    cache_set("mysearch:{$searchword}", $data, 'cache', strtotime('+1 hour'));
  }

  if (empty($data)) {
    return t('Results for %searchword wasn\'t found', array(
      '%searchword' => $searchword,
    ));
  }

  $items = array();
  
  foreach ($data as $nid => $title) {
    $item_output = '<div class="node-title">' . $title . '</div>';
    $node_view_link = l(t('View'), "node/$nid", array(
      'attributes' => array(
        'class' => array('node-view-link'),
      ),
    ));
    $item_output .= '<div class="node-view">' . $node_view_link . '</div>';
    $items[] = $item_output;
  }
  
  $variables = array(
    'items' => $items,
    'type' => 'ul',
    'attributes' => array(
      'class' => array('node-mysearch-list'),
    ),
  );

  $output = theme('item_list', $variables);
  return $output;
}